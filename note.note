'use client'

import { useState } from 'react'
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { PlusCircle, Trash2 } from "lucide-react"
import { ScrollArea } from "@/components/ui/scroll-area"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"

interface Education {
  institution: string
  degree: string
  year: string
}

interface Experience {
  company: string
  position: string
  duration: string
  description: string
}

interface ResumeData {
  personalInfo: {
    name: string
    email: string
    phone: string
  }
  education: Education[]
  experience: Experience[]
  skills: string
}

export default function Component() {
  const [resumeData, setResumeData] = useState<ResumeData>({
    personalInfo: {
      name: '',
      email: '',
      phone: '',
    },
    education: [{ institution: '', degree: '', year: '' }],
    experience: [{ company: '', position: '', duration: '', description: '' }],
    skills: '',
  })

  const handlePersonalInfoChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setResumeData({
      ...resumeData,
      personalInfo: {
        ...resumeData.personalInfo,
        [e.target.name]: e.target.value,
      },
    })
  }

  const addEducation = () => {
    setResumeData({
      ...resumeData,
      education: [...resumeData.education, { institution: '', degree: '', year: '' }],
    })
  }

  const addExperience = () => {
    setResumeData({
      ...resumeData,
      experience: [...resumeData.experience, { company: '', position: '', duration: '', description: '' }],
    })
  }

  const removeEducation = (index: number) => {
    setResumeData({
      ...resumeData,
      education: resumeData.education.filter((_, i) => i !== index),
    })
  }

  const removeExperience = (index: number) => {
    setResumeData({
      ...resumeData,
      experience: resumeData.experience.filter((_, i) => i !== index),
    })
  }

  return (
    <div className="container mx-auto py-6">
      <Tabs defaultValue="form" className="w-full">
        <TabsList className="grid w-full grid-cols-2">
          <TabsTrigger value="form">Form</TabsTrigger>
          <TabsTrigger value="preview">Preview</TabsTrigger>
        </TabsList>
        <TabsContent value="form">
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>Personal Information</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <Label htmlFor="name">Full Name</Label>
                  <Input
                    id="name"
                    name="name"
                    placeholder="John Doe"
                    value={resumeData.personalInfo.name}
                    onChange={handlePersonalInfoChange}
                  />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="email">Email</Label>
                  <Input
                    id="email"
                    name="email"
                    type="email"
                    placeholder="john@example.com"
                    value={resumeData.personalInfo.email}
                    onChange={handlePersonalInfoChange}
                  />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="phone">Phone Number</Label>
                  <Input
                    id="phone"
                    name="phone"
                    placeholder="+1 (555) 000-0000"
                    value={resumeData.personalInfo.phone}
                    onChange={handlePersonalInfoChange}
                  />
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Education</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                {resumeData.education.map((edu, index) => (
                  <div key={index} className="relative space-y-4 rounded-lg border p-4">
                    <Button
                      variant="ghost"
                      size="icon"
                      className="absolute right-2 top-2"
                      onClick={() => removeEducation(index)}
                    >
                      <Trash2 className="h-4 w-4" />
                    </Button>
                    <div className="space-y-2">
                      <Label>Institution</Label>
                      <Input
                        value={edu.institution}
                        onChange={(e) => {
                          const newEducation = [...resumeData.education]
                          newEducation[index].institution = e.target.value
                          setResumeData({ ...resumeData, education: newEducation })
                        }}
                        placeholder="University Name"
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>Degree</Label>
                      <Input
                        value={edu.degree}
                        onChange={(e) => {
                          const newEducation = [...resumeData.education]
                          newEducation[index].degree = e.target.value
                          setResumeData({ ...resumeData, education: newEducation })
                        }}
                        placeholder="Bachelor of Science"
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>Year</Label>
                      <Input
                        value={edu.year}
                        onChange={(e) => {
                          const newEducation = [...resumeData.education]
                          newEducation[index].year = e.target.value
                          setResumeData({ ...resumeData, education: newEducation })
                        }}
                        placeholder="2020-2024"
                      />
                    </div>
                  </div>
                ))}
                <Button onClick={addEducation} variant="outline" className="w-full">
                  <PlusCircle className="mr-2 h-4 w-4" />
                  Add Education
                </Button>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Experience</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                {resumeData.experience.map((exp, index) => (
                  <div key={index} className="relative space-y-4 rounded-lg border p-4">
                    <Button
                      variant="ghost"
                      size="icon"
                      className="absolute right-2 top-2"
                      onClick={() => removeExperience(index)}
                    >
                      <Trash2 className="h-4 w-4" />
                    </Button>
                    <div className="space-y-2">
                      <Label>Company</Label>
                      <Input
                        value={exp.company}
                        onChange={(e) => {
                          const newExperience = [...resumeData.experience]
                          newExperience[index].company = e.target.value
                          setResumeData({ ...resumeData, experience: newExperience })
                        }}
                        placeholder="Company Name"
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>Position</Label>
                      <Input
                        value={exp.position}
                        onChange={(e) => {
                          const newExperience = [...resumeData.experience]
                          newExperience[index].position = e.target.value
                          setResumeData({ ...resumeData, experience: newExperience })
                        }}
                        placeholder="Software Engineer"
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>Duration</Label>
                      <Input
                        value={exp.duration}
                        onChange={(e) => {
                          const newExperience = [...resumeData.experience]
                          newExperience[index].duration = e.target.value
                          setResumeData({ ...resumeData, experience: newExperience })
                        }}
                        placeholder="2020 - Present"
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>Description</Label>
                      <Textarea
                        value={exp.description}
                        onChange={(e) => {
                          const newExperience = [...resumeData.experience]
                          newExperience[index].description = e.target.value
                          setResumeData({ ...resumeData, experience: newExperience })
                        }}
                        placeholder="Describe your responsibilities and achievements"
                      />
                    </div>
                  </div>
                ))}
                <Button onClick={addExperience} variant="outline" className="w-full">
                  <PlusCircle className="mr-2 h-4 w-4" />
                  Add Experience
                </Button>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Skills</CardTitle>
              </CardHeader>
              <CardContent>
                <Textarea
                  value={resumeData.skills}
                  onChange={(e) => setResumeData({ ...resumeData, skills: e.target.value })}
                  placeholder="List your key skills (e.g., JavaScript, React, Node.js)"
                  className="min-h-[100px]"
                />
              </CardContent>
            </Card>
          </div>
        </TabsContent>
        <TabsContent value="preview">
          <Card>
            <CardContent className="p-6">
              <ScrollArea className="h-[600px] pr-4">
                <div className="space-y-8">
                  <div>
                    <h2 className="text-2xl font-bold">{resumeData.personalInfo.name || 'Your Name'}</h2>
                    <p className="text-muted-foreground">
                      {resumeData.personalInfo.email && `${resumeData.personalInfo.email} • `}
                      {resumeData.personalInfo.phone}
                    </p>
                  </div>

                  <div>
                    <h3 className="mb-4 text-lg font-semibold">Education</h3>
                    <div className="space-y-4">
                      {resumeData.education.map((edu, index) => (
                        <div key={index}>
                          <div className="flex justify-between">
                            <strong>{edu.institution}</strong>
                            <span>{edu.year}</span>
                          </div>
                          <p>{edu.degree}</p>
                        </div>
                      ))}
                    </div>
                  </div>

                  <div>
                    <h3 className="mb-4 text-lg font-semibold">Experience</h3>
                    <div className="space-y-4">
                      {resumeData.experience.map((exp, index) => (
                        <div key={index}>
                          <div className="flex justify-between">
                            <strong>{exp.company}</strong>
                            <span>{exp.duration}</span>
                          </div>
                          <p className="font-medium">{exp.position}</p>
                          <p className="text-muted-foreground">{exp.description}</p>
                        </div>
                      ))}
                    </div>
                  </div>

                  {resumeData.skills && (
                    <div>
                      <h3 className="mb-4 text-lg font-semibold">Skills</h3>
                      <p>{resumeData.skills}</p>
                    </div>
                  )}
                </div>
              </ScrollArea>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  )
}